<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">



  

<title type="text">Easy Concepts</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://anchalrani.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://anchalrani.github.io/" />
<updated>2015-11-18T22:44:40+06:00</updated>
<id>http://anchalrani.github.io/</id>
<author>
  <name>Anchal Rani</name>
  <uri>http://anchalrani.github.io/</uri>
  <email>anchalrani@outlook.com</email>
</author>


<entry>
  <title type="html"><![CDATA[starting with network and data communications]]></title>
  <link rel="alternate" type="text/html" href="http://anchalrani.github.io/network%20and%20data%20communications/starting-with-network-and-data-communications"/>
  <id>http://anchalrani.github.io/network%20and%20data%20communications/starting-with-network-and-data-communications</id>
  <published>2015-11-18T00:00:00+06:00</published>
  <updated>2013-05-31T00:00:00-00:00</updated>
  
  <author>
    <name>Anchal Rani</name>
    <uri>http://anchalrani.github.io</uri>
    <email>anchalrani@outlook.com</email>
  </author>
  <category scheme="http://anchalrani.github.io/tags/#network" term="network" /><category scheme="http://anchalrani.github.io/tags/#topology" term="topology" /><category scheme="http://anchalrani.github.io/tags/#mesh" term="mesh" /><category scheme="http://anchalrani.github.io/tags/#communication" term="communication" />
  <content type="html">
  
    &lt;h1 id=&quot;network&quot;&gt;Network&lt;/h1&gt;
&lt;p&gt;Let  us  start  with  the  basics  now since  we  are  learning  about 
networks  and  communication  we  should  know  what  does  a 
network  means.  If  we  understand  the  basic  literary  meaning 
of  network  it  means  connections  between  some  entities  in 
the real world. For example, a group of friends it can be said 
we  have  a  network  of  friends  who  reside  in  different  places 
and  we  communicate  with  them  through  words  if  we  are 
together  or  we  need  to  take  a  medium  like  a  car,  bus  etc  to 
meet them. In this case car, or bus is   medium which carries 
us.&lt;br /&gt;
Now  you  would  say  we  can  make  a  call  via  telephone  or 
mobile  instead  of  meeting  the  friend  directly.  Now  do  you 
know  what  is  the  medium  here.  It  is  the  telephone  wires  or 
wireless communication which we are going to study later. 
Let    us    get    back    to    our    definition    of    network. In 
communication  technology  we  define  network  as  a  set  of 
devices connected by media links.
Just as we must be able to understand the language in which 
a  person  speaks  to  communicate  with  us,  similarly  devices 
must   also   be   able   to   follow   similar   set   of   rules   to 
communicate with each other. These   set   of   rules   that   govern   data   communication   are 
known   as   protocol.   They   are  standards   in   which   all   the 
devices must communicate so that the information passed is 
understood  by  every  communicating  device  to  which  the message is sent.&lt;/p&gt;

&lt;p&gt;Now  we  know  that  we  have  communication  links  between 
devices to communicate, but how are they layed in a network 
and how are the links connected. Are there a number of ways 
of  arranging  and  connecting  the  devices?  The  answer  is  yes, 
there are different ways and the way  a network is laid down 
logically or physically is known as a Topology. &lt;/p&gt;

&lt;p&gt;There  are  six  types  of  topologies,  some  are  basic  and  some 
are derived from them. Let us study them one by one&lt;/p&gt;

&lt;p&gt;Mesh  Topology:  Every  device  has  a  dedicated  point  to  point 
link to every other device. 
If there are n devices then no. of links=n(n-1)/2&lt;/p&gt;

&lt;p&gt;Star Topology: Each device has a dedicated point to point link 
only to central controller usually called a hub. &lt;/p&gt;

&lt;p&gt;Tree  Topology:  is  a  variation  of  star.  Some  are  connected  to 
central  hub  and  majority  of  devices  are  connected  to  a 
secondary hub that in turn is connected to central hub. &lt;/p&gt;

&lt;p&gt;Bus  Topology:  Its  is  a  multipoint  one  long  cable  acts  as  a 
backbone to link all devices in a network. &lt;/p&gt;

&lt;p&gt;Ring  Topology:  Each  device  has  a  dedicated  point  to  point 
line configuration only with the two devices on either side of 
it. 
Signal is passed along the ring in one direction from device to 
device until it reaches its destination. &lt;/p&gt;

&lt;p&gt;Hybrid   Topology:   It   is   network   that   combines   several 
topologies as sub-network linked together in a larger way. &lt;/p&gt;

&lt;p&gt;We will continue with different networking devices in the next article.&lt;/p&gt;

  
  &lt;p&gt;&lt;a href=&quot;http://anchalrani.github.io/network%20and%20data%20communications/starting-with-network-and-data-communications&quot;&gt;starting with network and data communications&lt;/a&gt; was originally published by Anchal Rani at &lt;a href=&quot;http://anchalrani.github.io&quot;&gt;Easy Concepts&lt;/a&gt; on November 18, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Basic terms in Software TEsting]]></title>
  <link rel="alternate" type="text/html" href="http://anchalrani.github.io/software%20testing/basic-terms-in-software-testing"/>
  <id>http://anchalrani.github.io/software%20testing/basic-terms-in-software-testing</id>
  <published>2015-09-05T00:00:00+06:00</published>
  <updated>2015-09-05T00:00:00-00:00</updated>
  
  <author>
    <name>Anchal Rani</name>
    <uri>http://anchalrani.github.io</uri>
    <email>anchalrani@outlook.com</email>
  </author>
  <category scheme="http://anchalrani.github.io/tags/#functional" term="functional" /><category scheme="http://anchalrani.github.io/tags/#testing" term="testing" /><category scheme="http://anchalrani.github.io/tags/#alpha" term="alpha" /><category scheme="http://anchalrani.github.io/tags/#beta" term="beta" /><category scheme="http://anchalrani.github.io/tags/#regression" term="regression" />
  <content type="html">
  
    &lt;h1 id=&quot;let-us-start-with-the-definition-of-software-testing&quot;&gt;Let us Start with the definition of Software Testing.&lt;/h1&gt;

&lt;p&gt;So what is &lt;strong&gt;Software Testing&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Software testing is a process of executing a program or application with the intent of finding the software bugs, errors and faults.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Failure&lt;/strong&gt;: It is the inability of a system or component to perform required function according to its specification.&lt;/li&gt;
&lt;/ul&gt;

  
  &lt;p&gt;&lt;a href=&quot;http://anchalrani.github.io/software%20testing/basic-terms-in-software-testing&quot;&gt;Basic terms in Software TEsting&lt;/a&gt; was originally published by Anchal Rani at &lt;a href=&quot;http://anchalrani.github.io&quot;&gt;Easy Concepts&lt;/a&gt; on September 05, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Introduction to Databases]]></title>
  <link rel="alternate" type="text/html" href="http://anchalrani.github.io/database/introduction-to-databases"/>
  <id>http://anchalrani.github.io/database/introduction-to-databases</id>
  <published>2015-08-05T00:00:00+06:00</published>
  <updated>2013-05-31T00:00:00-00:00</updated>
  
  <author>
    <name>Anchal Rani</name>
    <uri>http://anchalrani.github.io</uri>
    <email>anchalrani@outlook.com</email>
  </author>
  <category scheme="http://anchalrani.github.io/tags/#atomicity" term="atomicity" /><category scheme="http://anchalrani.github.io/tags/#integrity" term="integrity" /><category scheme="http://anchalrani.github.io/tags/#redundancy" term="redundancy" /><category scheme="http://anchalrani.github.io/tags/#inconsistency" term="inconsistency" /><category scheme="http://anchalrani.github.io/tags/#ATM" term="ATM" /><category scheme="http://anchalrani.github.io/tags/#data" term="data" /><category scheme="http://anchalrani.github.io/tags/#isolation" term="isolation" />
  <content type="html">
  
    &lt;h1 id=&quot;database&quot;&gt;Database&lt;/h1&gt;

&lt;p&gt;A Database is a collection of interrelated data and set of programs to access those data.&lt;/p&gt;

&lt;p&gt;It provides a way to store and retrieve database information that is both convenient and efficient.&lt;/p&gt;

&lt;p&gt;Do you know that you directly or indirectly access atleast one database daily.
You must be wondering when&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;when you withdraw money from ATM, you are acceding bankâ€™s database.&lt;/li&gt;
  &lt;li&gt;when you are doing reservation on IRCTC website.&lt;/li&gt;
  &lt;li&gt;when you are booking your air ticket online.&lt;/li&gt;
  &lt;li&gt;when you register for courses in any university.&lt;/li&gt;
  &lt;li&gt;when you are shopping online you are aaccessing the sellers database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You must be thinking why do we need to use database when we can store information in files. It is because we want some anomalies to be removed which exists in file system. These anomalies include&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Data redundancy and inconsistency&lt;/li&gt;
  &lt;li&gt;Difficulty in accessing data&lt;/li&gt;
  &lt;li&gt;Data Isolation&lt;/li&gt;
  &lt;li&gt;Integrity problems&lt;/li&gt;
  &lt;li&gt;Atomicity problems&lt;/li&gt;
  &lt;li&gt;Concurrent access anomalies&lt;/li&gt;
  &lt;li&gt;Security problems&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We will study why do these problems arise individually.&lt;/p&gt;

&lt;p&gt;Let us start with first one&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Data redundancy and inconsistency&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Different programmers may create several files and same information may be duplicated in several places.This redundancy may lead to higher storage and cost. And also it creates inconsistency that is all files copies may have different values, which must be equal.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Difficulty in accessing data&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us assume that we have information about each student in one text file each in a system. Now if we want to access names of students who study in 5 class and who have paid there fees. For this we will have to open each file and note down the name of the students who satisfy the above condition. It becomes very difficult to perform such operations on 100s and 1000s of students.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Data Isolation&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because data are scattered in various files , and files may be in different formats and due to this writing new application programs to retrieve the appropriate data is difficult.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Integrity Problems&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The data values stored in the database must abide by certain consistency constraints. For example, we want that minimum balance in a account must be Rs. 2000, it must never get below the specified amount. Developers enforce these constraints using various application programs. But if new constraints are added it becomes complex to change the code when it is for different types of file having different formats.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Atomicity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us take example of a transaction to explain this property. Suppose we want to transfer Rs.400 from account A to account B. If an execution failure occurs in between the transaction, system must assure that either the transaction occurs completely or it must restore the values as were before in both the accounts. Otherwise it might happen that account A is debited Rs.400 but account B is not credited with it. It means that the transaction must happen in its entirety or not at all. It is difficult to maintain atomicity in file system.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Concurrent access anomalies&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When two users access the same file, there is possibility that the file may be left in an incorrect or inconsistent state. For example, two files are being edited by two users say quantity of a product is 200 . Now at the same time user A reduces it by 10 and user B reduces it by 20. In such a case if the system edits for only user A quanity becomes 190 or if it takes user B quantity becomes 180. But in either case only one transaction is read by the system. The value for quantity must have been 170 because actually the product quantity is reduced by 30.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each user must not be able to view all the details of the database for it may be irrelevant for him and it may lead to unauthorised access. For example, a student must be able to see information regarding his course and marks, but not the salary status of the faculties on a university website. But since application programs are added to the file processing systems in an ad hoc manner, enforcing such security constraints is diificult.&lt;/p&gt;

&lt;p&gt;Next we are going to study some basic terminologies in Databases.&lt;/p&gt;

  
  &lt;p&gt;&lt;a href=&quot;http://anchalrani.github.io/database/introduction-to-databases&quot;&gt;Introduction to Databases&lt;/a&gt; was originally published by Anchal Rani at &lt;a href=&quot;http://anchalrani.github.io&quot;&gt;Easy Concepts&lt;/a&gt; on August 05, 2015.&lt;/p&gt;</content>
</entry>

</feed>
